/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface ConstantsInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "CHALLENGE_PERIOD_BUFFER"
      | "DEPOSIT_LOCKUP_PERIOD_SCALAR"
      | "MIN_CONFIRMATION_BLOCKS"
      | "MIN_DEPOSIT_AMOUNT"
      | "MIN_OUTPUT_SATS"
      | "PROOF_GEN_SCALING_FACTOR"
      | "PROTOCOL_FEE_BP"
      | "SCALED_PROOF_GEN_INTERCEPT"
      | "SCALED_PROOF_GEN_SLOPE"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "CHALLENGE_PERIOD_BUFFER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEPOSIT_LOCKUP_PERIOD_SCALAR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MIN_CONFIRMATION_BLOCKS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MIN_DEPOSIT_AMOUNT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MIN_OUTPUT_SATS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PROOF_GEN_SCALING_FACTOR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PROTOCOL_FEE_BP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SCALED_PROOF_GEN_INTERCEPT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SCALED_PROOF_GEN_SLOPE",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "CHALLENGE_PERIOD_BUFFER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEPOSIT_LOCKUP_PERIOD_SCALAR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MIN_CONFIRMATION_BLOCKS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MIN_DEPOSIT_AMOUNT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MIN_OUTPUT_SATS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PROOF_GEN_SCALING_FACTOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PROTOCOL_FEE_BP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SCALED_PROOF_GEN_INTERCEPT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SCALED_PROOF_GEN_SLOPE",
    data: BytesLike
  ): Result;
}

export interface Constants extends BaseContract {
  connect(runner?: ContractRunner | null): Constants;
  waitForDeployment(): Promise<this>;

  interface: ConstantsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  CHALLENGE_PERIOD_BUFFER: TypedContractMethod<[], [bigint], "view">;

  DEPOSIT_LOCKUP_PERIOD_SCALAR: TypedContractMethod<[], [bigint], "view">;

  MIN_CONFIRMATION_BLOCKS: TypedContractMethod<[], [bigint], "view">;

  MIN_DEPOSIT_AMOUNT: TypedContractMethod<[], [bigint], "view">;

  MIN_OUTPUT_SATS: TypedContractMethod<[], [bigint], "view">;

  PROOF_GEN_SCALING_FACTOR: TypedContractMethod<[], [bigint], "view">;

  PROTOCOL_FEE_BP: TypedContractMethod<[], [bigint], "view">;

  SCALED_PROOF_GEN_INTERCEPT: TypedContractMethod<[], [bigint], "view">;

  SCALED_PROOF_GEN_SLOPE: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "CHALLENGE_PERIOD_BUFFER"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "DEPOSIT_LOCKUP_PERIOD_SCALAR"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MIN_CONFIRMATION_BLOCKS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MIN_DEPOSIT_AMOUNT"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MIN_OUTPUT_SATS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "PROOF_GEN_SCALING_FACTOR"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "PROTOCOL_FEE_BP"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "SCALED_PROOF_GEN_INTERCEPT"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "SCALED_PROOF_GEN_SLOPE"
  ): TypedContractMethod<[], [bigint], "view">;

  filters: {};
}
