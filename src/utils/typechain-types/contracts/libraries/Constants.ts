/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface ConstantsInterface extends utils.Interface {
  functions: {
    "CHALLENGE_PERIOD_BUFFER()": FunctionFragment;
    "DEPOSIT_LOCKUP_PERIOD_SCALAR()": FunctionFragment;
    "MIN_CONFIRMATION_BLOCKS()": FunctionFragment;
    "MIN_DEPOSIT_AMOUNT()": FunctionFragment;
    "MIN_OUTPUT_SATS()": FunctionFragment;
    "PROOF_GEN_SCALING_FACTOR()": FunctionFragment;
    "PROTOCOL_FEE_BP()": FunctionFragment;
    "SCALED_PROOF_GEN_INTERCEPT()": FunctionFragment;
    "SCALED_PROOF_GEN_SLOPE()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "CHALLENGE_PERIOD_BUFFER"
      | "DEPOSIT_LOCKUP_PERIOD_SCALAR"
      | "MIN_CONFIRMATION_BLOCKS"
      | "MIN_DEPOSIT_AMOUNT"
      | "MIN_OUTPUT_SATS"
      | "PROOF_GEN_SCALING_FACTOR"
      | "PROTOCOL_FEE_BP"
      | "SCALED_PROOF_GEN_INTERCEPT"
      | "SCALED_PROOF_GEN_SLOPE"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "CHALLENGE_PERIOD_BUFFER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEPOSIT_LOCKUP_PERIOD_SCALAR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MIN_CONFIRMATION_BLOCKS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MIN_DEPOSIT_AMOUNT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MIN_OUTPUT_SATS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PROOF_GEN_SCALING_FACTOR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PROTOCOL_FEE_BP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SCALED_PROOF_GEN_INTERCEPT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SCALED_PROOF_GEN_SLOPE",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "CHALLENGE_PERIOD_BUFFER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEPOSIT_LOCKUP_PERIOD_SCALAR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MIN_CONFIRMATION_BLOCKS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MIN_DEPOSIT_AMOUNT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MIN_OUTPUT_SATS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PROOF_GEN_SCALING_FACTOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PROTOCOL_FEE_BP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SCALED_PROOF_GEN_INTERCEPT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SCALED_PROOF_GEN_SLOPE",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Constants extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ConstantsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    CHALLENGE_PERIOD_BUFFER(overrides?: CallOverrides): Promise<[number]>;

    DEPOSIT_LOCKUP_PERIOD_SCALAR(overrides?: CallOverrides): Promise<[number]>;

    MIN_CONFIRMATION_BLOCKS(overrides?: CallOverrides): Promise<[number]>;

    MIN_DEPOSIT_AMOUNT(overrides?: CallOverrides): Promise<[number]>;

    MIN_OUTPUT_SATS(overrides?: CallOverrides): Promise<[number]>;

    PROOF_GEN_SCALING_FACTOR(overrides?: CallOverrides): Promise<[number]>;

    PROTOCOL_FEE_BP(overrides?: CallOverrides): Promise<[number]>;

    SCALED_PROOF_GEN_INTERCEPT(overrides?: CallOverrides): Promise<[number]>;

    SCALED_PROOF_GEN_SLOPE(overrides?: CallOverrides): Promise<[number]>;
  };

  CHALLENGE_PERIOD_BUFFER(overrides?: CallOverrides): Promise<number>;

  DEPOSIT_LOCKUP_PERIOD_SCALAR(overrides?: CallOverrides): Promise<number>;

  MIN_CONFIRMATION_BLOCKS(overrides?: CallOverrides): Promise<number>;

  MIN_DEPOSIT_AMOUNT(overrides?: CallOverrides): Promise<number>;

  MIN_OUTPUT_SATS(overrides?: CallOverrides): Promise<number>;

  PROOF_GEN_SCALING_FACTOR(overrides?: CallOverrides): Promise<number>;

  PROTOCOL_FEE_BP(overrides?: CallOverrides): Promise<number>;

  SCALED_PROOF_GEN_INTERCEPT(overrides?: CallOverrides): Promise<number>;

  SCALED_PROOF_GEN_SLOPE(overrides?: CallOverrides): Promise<number>;

  callStatic: {
    CHALLENGE_PERIOD_BUFFER(overrides?: CallOverrides): Promise<number>;

    DEPOSIT_LOCKUP_PERIOD_SCALAR(overrides?: CallOverrides): Promise<number>;

    MIN_CONFIRMATION_BLOCKS(overrides?: CallOverrides): Promise<number>;

    MIN_DEPOSIT_AMOUNT(overrides?: CallOverrides): Promise<number>;

    MIN_OUTPUT_SATS(overrides?: CallOverrides): Promise<number>;

    PROOF_GEN_SCALING_FACTOR(overrides?: CallOverrides): Promise<number>;

    PROTOCOL_FEE_BP(overrides?: CallOverrides): Promise<number>;

    SCALED_PROOF_GEN_INTERCEPT(overrides?: CallOverrides): Promise<number>;

    SCALED_PROOF_GEN_SLOPE(overrides?: CallOverrides): Promise<number>;
  };

  filters: {};

  estimateGas: {
    CHALLENGE_PERIOD_BUFFER(overrides?: CallOverrides): Promise<BigNumber>;

    DEPOSIT_LOCKUP_PERIOD_SCALAR(overrides?: CallOverrides): Promise<BigNumber>;

    MIN_CONFIRMATION_BLOCKS(overrides?: CallOverrides): Promise<BigNumber>;

    MIN_DEPOSIT_AMOUNT(overrides?: CallOverrides): Promise<BigNumber>;

    MIN_OUTPUT_SATS(overrides?: CallOverrides): Promise<BigNumber>;

    PROOF_GEN_SCALING_FACTOR(overrides?: CallOverrides): Promise<BigNumber>;

    PROTOCOL_FEE_BP(overrides?: CallOverrides): Promise<BigNumber>;

    SCALED_PROOF_GEN_INTERCEPT(overrides?: CallOverrides): Promise<BigNumber>;

    SCALED_PROOF_GEN_SLOPE(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    CHALLENGE_PERIOD_BUFFER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    DEPOSIT_LOCKUP_PERIOD_SCALAR(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MIN_CONFIRMATION_BLOCKS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MIN_DEPOSIT_AMOUNT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MIN_OUTPUT_SATS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PROOF_GEN_SCALING_FACTOR(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PROTOCOL_FEE_BP(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SCALED_PROOF_GEN_INTERCEPT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    SCALED_PROOF_GEN_SLOPE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
