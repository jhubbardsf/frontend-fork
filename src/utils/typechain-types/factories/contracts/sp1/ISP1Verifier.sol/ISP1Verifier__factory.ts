/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISP1Verifier,
  ISP1VerifierInterface,
} from "../../../../contracts/sp1/ISP1Verifier.sol/ISP1Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "programVKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "publicValues",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proofBytes",
        type: "bytes",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISP1Verifier__factory {
  static readonly abi = _abi;
  static createInterface(): ISP1VerifierInterface {
    return new Interface(_abi) as ISP1VerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISP1Verifier {
    return new Contract(address, _abi, runner) as unknown as ISP1Verifier;
  }
}
